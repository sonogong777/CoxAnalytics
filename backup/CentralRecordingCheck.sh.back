#!/bin/bash
#SITE="SD"
SITE=$(crontab -l|grep SITE|awk '{print $6}'|awk -F"=" '{print $2}'|tr '[:lower:]' '[:upper:]')
DBSERVER="$1"
DATABASE="riodev"
DBPORT="3306"
DEBUG=0
DBCONN="memsql -sN -D riodev -u root -h $DBSERVER -P $DBPORT -e"
DAY[0]=`date +%Y-%m-%d`
DAY[1]=`date --date='1 days ago' +%Y-%m-%d`
DAY[2]=`date --date='2 days ago' +%Y-%m-%d`
DAY[3]=`date --date='3 days ago' +%Y-%m-%d`
DAY[4]=`date --date='4 days ago' +%Y-%m-%d`
DAY[5]=`date --date='5 days ago' +%Y-%m-%d`

#usage

if [ "$#" -gt 1 ];then
  echo
  echo "Usage: $0"
  echo "Memsql Report"
  exit
fi

#site information
echo "---------------"
printf "| SITE:  %3s  |\n" $SITE
echo "---------------"

for day in {5..1}
do
  daybefore=$(($day-1))
#Scheduled yesterday
#totalScheduled=$(memsql -sN -D riodev -u root -h $DBSERVER -P $DBPORT -e "select count(*) from Recordings where ScheduledTime >= '${DAY[1]}' AND ScheduledTime < '${DAY[0]}';")
totalScheduled=$($DBCONN "select count(*) from Recordings where ScheduledTime >= '${DAY[1]}' AND ScheduledTime < '${DAY[0]}';")
totalScheduled2=$($DBCONN "select count(*) from Recordings where ScheduledTime >= '${DAY[1]}' AND ScheduledTime < '${DAY[0]}' AND XRID like 'V%';")
printf  "\nScheduled yesterday\n Total Scheduled: "
printf "$totalScheduled $totalScheduled2\n"
printf " ELK query to be added\n\n"

#Recordings yesterday
totalRecordings=$($DBCONN "select count(*) from Recordings where StartTime >= '${DAY[1]}' AND StartTime < '${DAY[0]}';")
totalRecordings2=$($DBCONN "select count(*) from Recordings where StartTime >= '${DAY[1]}' AND StartTime < '${DAY[0]}' AND XRID like 'V%';")
totalFailedRec=$($DBCONN "select count(*) from Recordings where StartTime >= '${DAY[1]}' AND StartTime < '${DAY[0]}' AND ( (StatSegmentsSuccess / (StatSegmentsSuccess + StatSegmentsFailure + StatSegmentsCompleteFailure) < .98) OR (StatSegmentsSuccess =0) );")
totalFailedRec2=$($DBCONN "select count(*) from Recordings where StartTime >= '${DAY[1]}' AND StartTime < '${DAY[0]}' AND XRID like 'V%' AND ( (StatSegmentsSuccess / (StatSegmentsSuccess + StatSegmentsFailure + StatSegmentsCompleteFailure) < .98) OR (StatSegmentsSuccess =0) );")

printf "Recordings yesterday\n Total Recording: "
printf "$totalRecordings $totalRecordings2\n"
printf " Total Recording Failure: $totalFailedRec $totalFailedRec\n\n"

#Accounts with recordings from yestaday
totalAccount=$($DBCONN "select count(distinct(AccountID)) from Recordings where StartTime >= '${DAY[1]}' AND StartTime < '${DAY[0]}';")
totalAccount2=$($DBCONN "select count(distinct(substring(AccountID,1,20))) as 'Accounts' from Recordings where StartTime >= '${DAY[1]}' AND StartTime < '${DAY[0]}' AND XRID like 'V%';")

printf "Accounts with recordings form yesterday\n Total Accounts: "
printf "$totalAccount $totalAccount2\n\n"
